<<<<<<< HEAD
ï»¿@using PagedList.Mvc
@using Microsoft.SqlServer.Types;

@model PagedList.IPagedList<CRME.Models.cat_indicadores>
@{
    CRME.Models.SIRE_Context db = new CRME.Models.SIRE_Context();
    string strorden = ""; string iconorder = "";
    CRME.Models.cat_indicadores ci = new CRME.Models.cat_indicadores();
}


<div class="row margin-10">
    <div class="col l6 m6 s11 titlecircle">
        <b>Indicadores Registrados</b>
    </div>
    <div class="col l6 m6 s1 separator">
    </div>
</div>
@if (Auth.Usuario.perfil_ID == 6)
{
    <div class="row">
        <div class="col s12 m4 l4 input-field">
            <a class="btn light-blue darken-4 waves-effect nuevores white-text" href="@Url.Action("VisualizarInd","IndicadoresView")"><i class="mdi mdi-plus"></i> Asignar Indicador</a>
        </div>
    </div>
}

<div id="TablaIndicadores">

    <div class="row">
        <div class="col l12 m12 s12">
            <table class="striped highlight light-blue">
                <thead class="table-header-blue">
                    <tr class="table-header-tr-blue">
                        @if (Auth.Usuario.perfil_ID == 6 || Auth.Usuario.perfil_ID == 1)
                        {
                            <td colspan="23" class="center-align">INDICADORES @DateTime.Now.Year    </td>
                        }
                        else
                        {
                            <td colspan="22" class="center-align">INDICADORES @DateTime.Now.Year    </td>
                        }

                    </tr>
                    <tr class="table-header-tr-blue">
                        <td class="center">Empresa</td>
                        <td class="center hide-on-small-only">Proceso</td>
                        <td class="center hide-on-small-only">Indicador</td>
                        <td class="center hide-on-small-only">Calculo</td>
                        <td class="center hide-on-small-only">Res Esperado</td>
                        <td class="center hide-on-small-only">Resp medicion</td>
                        <td class="center hide-on-small-only">Frec medicion</td>
                        <td class="center hide-on-small-only">Resp mejora</td>
                        <td class="center hide-on-small-only">Ene</td>
                        <td class="center hide-on-small-only">Feb</td>
                        <td class="center hide-on-small-only">Mar</td>
                        <td class="center hide-on-small-only">Abr</td>
                        <td class="center hide-on-small-only">May</td>
                        <td class="center hide-on-small-only">Jun</td>
                        <td class="center hide-on-small-only">Jul</td>
                        <td class="center hide-on-small-only">Ago</td>
                        <td class="center hide-on-small-only">Sep</td>
                        <td class="center hide-on-small-only">Oct</td>
                        <td class="center hide-on-small-only">Nov</td>
                        <td class="center hide-on-small-only">Dic</td>

                        <td class="center hide-on-small-only">Avance</td>
                        @if (Auth.Usuario.perfil_ID == 6 || Auth.Usuario.perfil_ID == 1)
                        {
                            <td class="center hide-on-small-only">Grafica</td>
                            foreach (var its in Model)
                            {
                                if (its.por_cum != 100)
                                {
                                    <td class="center">Opciones</td>
                                    break;
                                }
                                else
                                {
                                    break;
                                }
                            }

                        }
                        else if (Auth.Usuario.perfil_ID != 6 || Auth.Usuario.perfil_ID != 1)
                        {
                            //<td class="center hide-on-small-only">Grafica</td>
                            foreach (var its in Model)
                            {
                                if (its.por_cum == 100)
                                {
                                    <td class="center">Opciones</td>
                                    break;
                                }
                            }
                        }


                    </tr>
                </thead>
                <tbody class="table-body-blue">
                    @if (Model.Count == 0)
                    {
                        <tr class="table-body">
                            <td colspan="23" class="center">
                                <b>No se encontraron coincidencias</b>
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var item in Model)
                        {

                <tr class="table-body">
                    <td class="center hide-on-small-only" style="display:none;">@Html.DisplayFor(modelItem => item.indicadores_ID)</td>
                    <td class="left-align" style="text-transform: uppercase;">@Html.DisplayFor(modelItem => db.Empresa.Find(db.Procesos.Find(item.proceso).Em_Cve_Empresa).Em_Descripcion)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => db.Procesos.Find(item.proceso).descripcion)</td>     @*Nombre del proceso*@
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.indicador)</td>   @*Nombre del Indicador*@
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.form_cal)</td>    @*Formula del Calcula*@
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.res_esp) %</td>     @*Resultado Esperado*@

                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => db.Procesos.Find(item.proceso).responsable)</td> @*Nombre del responsable de Medicion*@

                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => db.cat_periodos.Find(item.frec_med).periodo_des)</td>    @*Frecuencia de la Medicion*@

                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => db.Puestos.Find(item.resp_mej).Pu_Descripcion)</td> @*Responsable de Mejora*@



                    @*INICIO DE DELIVERACION POR PERIODOS*@
                    @*INICIO PORCENTAJES MENSUAL Y ANUAL*@
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.por_cum) %</td>
                    @*FIN PORCENTAJES MENSUAL Y ANUAL*@
                    @*FIN DE DELIVERACION POR PERIODOS*@

                    @if (Auth.Usuario.perfil_ID == 6 || Auth.Usuario.perfil_ID == 1)
                    {
                        <td class="center hide-on-small-only" style="">
                            <a href="@Url.Action("GenerarReporte", "IndicadoresView", new {idIndicador=item.indicadores_ID})" class="GenerarReporte" data-position="bottom" data-delay="50" title="Grafica" style="cursor:pointer;"><i class="mdi mdi-chart-bar mdi-24px black-text"></i></a>
                        </td>
                    }


                    @if (Auth.Usuario.perfil_ID == 6 || Auth.Usuario.perfil_ID == 1)
                    {
                        if (item.por_cum == 100)
                        {
                            <td class="center">
                                <a href="#ancla" class="agregadatos" data-position="bottom" data-delay="50" title="Agregar Datos" data-tooltip="Agregar datos" style="cursor:pointer;" id-item="@item.indicadores_ID" id-vend=""><i class="mdi mdi-plus-box-multiple mdi-24px green-text"></i></a>&nbsp; &nbsp;
                            </td>
                        }
                        else if (item.por_cum != 100)
                        {
                            <td class="center">
                                <a href="#ancla" class="agregadatos" data-position="bottom" data-delay="50" title="Agregar Datos" data-tooltip="Agregar datos" style="cursor:pointer;" id-item="@item.indicadores_ID" id-vend=""><i class="mdi mdi-plus-box-multiple mdi-24px orange-text"></i></a>&nbsp; &nbsp;
                            </td>
                        }
                        else if (item.por_cum == 100)
                        {
                            <td class="center">
                                <a href="#ancla" class="agregadatos" data-position="bottom" data-delay="50" title="Agregar Datos" data-tooltip="Agregar datos" style="cursor:pointer;" id-item="@item.indicadores_ID" id-vend=""><i class="mdi mdi-plus-box-multiple mdi-24px red-text"></i></a>&nbsp; &nbsp;
                            </td>
                        }

                    }
                    else
                    {
                        if (item.por_cum == 100)
                        {
                           <td class="center">
                                <i class="mdi mdi-plus-box-multiple mdi-24px green-text"></i>&nbsp; &nbsp;
                            </td>
                        }
                        else if (item.por_cum != 100)
                        {
                            <td class="center">
                                <a href="#ancla" class="agregadatos" data-position="bottom" data-delay="50" title="Agregar Datos" data-tooltip="Agregar datos" style="cursor:pointer;" id-item="@item.indicadores_ID" id-vend=""><i class="mdi mdi-plus-box-multiple mdi-24px orange-text"></i></a>&nbsp; &nbsp;
                            </td>
                        }
                        else if (item.por_cum == 100)
                        {
                            <td class="center">
                                <a href="#ancla" class="agregadatos" data-position="bottom" data-delay="50" title="Agregar Datos" data-tooltip="Agregar datos" style="cursor:pointer;" id-item="@item.indicadores_ID" id-vend=""><i class="mdi mdi-plus-box-multiple mdi-24px red-text"></i></a>&nbsp; &nbsp;
                            </td>
                        }
                    }





                </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col s12 center-align">
            @if (Model != null)
            {
                @Html.PagedListPager(Model, page => Url.Action("_TablaLineas", new { page })
                    , PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions()
                    {
                        Display = PagedListDisplayMode.IfNeeded,
                        DisplayPageCountAndCurrentLocation = true,
                        DisplayItemSliceAndTotal = false,
                        PageCountAndCurrentLocationFormat = "PÃ¡gina {0} de {1}.",
                        ItemSliceAndTotalFormat = "Mostrando los elementos {0} a {1} de {2}.",
                        LinkToIndividualPageFormat = "{0}",
                    }, new AjaxOptions()
                    {
                        HttpMethod = "POST",
                        UpdateTargetId = "TablaIndicadores",
                        OnComplete = "FltOnCompletePer",
                        OnBegin = "FltOnBeginPer"
                    }
                )
            )
            }
        </div>
    </div>
</div>
 
=======
ï»¿@using PagedList.Mvc
@using Microsoft.SqlServer.Types;

@model PagedList.IPagedList<CRME.Models.cat_indicadores>
@{
    CRME.Models.SIRE_Context db = new CRME.Models.SIRE_Context();
    string strorden = ""; string iconorder = "";
    CRME.Models.cat_indicadores ci = new CRME.Models.cat_indicadores();
}


<div class="row margin-10">
    <div class="col l6 m6 s11 titlecircle">
        <b>Indicadores Registrados</b>
    </div>
    <div class="col l6 m6 s1 separator">
    </div>
</div>
@if (Auth.Usuario.perfil_ID == 6)
{
    <div class="row">
        <div class="col s12 m4 l4 input-field">
            <a class="btn light-blue darken-4 waves-effect nuevores white-text" href="@Url.Action("VisualizarInd","IndicadoresView")"><i class="mdi mdi-plus"></i> Asignar Indicador</a>
        </div>
    </div>
}

<div id="TablaIndicadores">

         <div class="row">
            <div class="col l12 m12 s12">
                <table class="striped highlight light-blue">
                    <thead class="table-header-blue">
                        <tr class="table-header-tr-blue">
                            @if (Auth.Usuario.perfil_ID == 6 || Auth.Usuario.perfil_ID == 1) 
                            { 
                                 <td colspan="23" class="center-align">INDICADORES @DateTime.Now.Year    </td>
                            }
                            else
                            {
                              <td colspan="22" class="center-align">INDICADORES @DateTime.Now.Year    </td>
                            }
                            
                        </tr>
                        <tr class="table-header-tr-blue">
                            <td class="center">Empresa</td>
                            <td class="center hide-on-small-only">Proceso</td>
                            <td class="center hide-on-small-only">Indicador</td>
                            <td class="center hide-on-small-only">Calculo</td>
                            <td class="center hide-on-small-only">Res Esperado</td>
                            <td class="center hide-on-small-only">Resp medicion</td>
                            <td class="center hide-on-small-only">Frec medicion</td>
                            <td class="center hide-on-small-only">Resp mejora</td>
                            <td class="center hide-on-small-only">Ene</td>
                            <td class="center hide-on-small-only">Feb</td>
                            <td class="center hide-on-small-only">Mar</td>
                            <td class="center hide-on-small-only">Abr</td>
                            <td class="center hide-on-small-only">May</td>
                            <td class="center hide-on-small-only">Jun</td>
                            <td class="center hide-on-small-only">Jul</td>
                            <td class="center hide-on-small-only">Ago</td>
                            <td class="center hide-on-small-only">Sep</td>
                            <td class="center hide-on-small-only">Oct</td>
                            <td class="center hide-on-small-only">Nov</td>
                            <td class="center hide-on-small-only">Dic</td>
                            <td class="center hide-on-small-only">Avance</td>
                            @if (Auth.Usuario.perfil_ID == 6 || Auth.Usuario.perfil_ID == 1)
                            {
                                <td class="center hide-on-small-only">Grafica</td>
                                foreach (var its in Model)
                                {
                                    if (its.dec == 0)
                                    {
                                        <td class="center">Opciones</td>
                                        break;
                                    }
                                }

                            }
                            else if (Auth.Usuario.perfil_ID != 6 || Auth.Usuario.perfil_ID != 1)
                            {
                                foreach (var its in Model)
                                {
                                    if (its.dec == 0)
                                    {
                                        <td class="center">Opciones</td>
                                        break;
                                    }
                                }
                            }


                        </tr>
                    </thead>
                    <tbody class="table-body-blue">
                        @if (Model.Count == 0)
                        {
                            <tr class="table-body">
                                <td colspan="23" class="center">
                                    <b>No se encontraron coincidencias</b>
                                </td>
                            </tr>
                        }
                        else
                        {
                            foreach (var item in Model)
                            {

                    <tr class="table-body">
                        <td class="center hide-on-small-only" style="display:none;">@Html.DisplayFor(modelItem => item.indicadores_ID)</td>
                        <td class="left-align" style="text-transform: uppercase;">@Html.DisplayFor(modelItem => db.Empresa.Find(db.Procesos.Find(item.proceso).Em_Cve_Empresa).Em_Descripcion)</td>
                        <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => db.Procesos.Find(item.proceso).descripcion)</td>     @*Nombre del proceso*@
                        <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.indicador)</td>   @*Nombre del Indicador*@
                        <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.form_cal)</td>    @*Formula del Calcula*@
                        <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.res_esp) %</td>     @*Resultado Esperado*@

                        <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => db.Procesos.Find(item.proceso).responsable)</td> @*Nombre del responsable de Medicion*@

                        <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => db.cat_periodos.Find(item.frec_med).periodo_des)</td>    @*Frecuencia de la Medicion*@

                        <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => db.Puestos.Find(item.resp_mej).Pu_Descripcion)</td> @*Responsable de Mejora*@



                        @*INICIO DE DELIVERACION POR PERIODOS*@
                        @*INICIO PORCENTAJES MENSUAL Y ANUAL*@
                        @using (Html.BeginForm("#", "#", FormMethod.Post, new { @class = "", id = "FrmDatos" }))
                        {
                            //INICIO MENSUAL
                            if (item.frec_med == 1 && item.mes == 1) //MENSUAL
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0
                                    )
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 2)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 3)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 4)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 5)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                 <td class="center hide-on-small-only" style="">
                                    @Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })
                                    <input type="hidden" id="id_Ene" name="id_Ene">
                                 </td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 6)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 7)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 8)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 9)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 10)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 11)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 1 && item.mes == 12)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            //FIN MENSUAL

                            //INICIO BIMESTRAL
                            else if (item.frec_med == 2 && item.mes == 1)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 2)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 3)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 4)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 5)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 6)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 7)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 8)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 9)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 10)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 11)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 2 && item.mes == 12)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            //FIN BIMESTRAL

                            //INICIO TRIMESTRAL
                            else if (item.frec_med == 3 && item.mes == 1)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 2)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 3)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 4)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 5)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 6)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 7)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 8)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 9)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 10)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 11)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 3 && item.mes == 12)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            //FIN TRIMESTRAL

                            //INICIO SEMESTRAL
                            else if (item.frec_med == 4 && item.mes == 1)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 2)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 3)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 4)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 5)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 6)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 7)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 8)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 9)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 10)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 11)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 12)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            //FIN SEMESTRAL

                            //INICIO ANUAL
                            else if (item.frec_med == 4 && item.mes == 1)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 2)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 3)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 4)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 5)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 6)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 7)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 8)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 9)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 10)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 11)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            else if (item.frec_med == 4 && item.mes == 12)
                            {
                                if (item.ene != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ene)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ene, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }

                                if (item.feb != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.feb)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.feb, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.mar != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.mar)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.mar, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.abr != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.abr)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.abr, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.may != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.may)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.may, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jun != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jun)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jun, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.jul != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.jul)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.jul, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.ago != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.ago)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.ago, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.sep != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.sep)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.sep, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.oct != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.oct)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.oct, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.nov != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.nov)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.nov, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.dec != 0)
                                {
                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => item.dec)</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">@Html.EditorFor(Model => item.dec, new { htmlAttributes = new { type = "number", max = 100, min = 0 } })</td>
                                }
                                if (item.por_cum != 1)
                                {
                                    int a = item.ene;
                                    int b = item.feb;
                                    int c = item.mar;
                                    int d = item.abr;
                                    int e = item.may;
                                    int f = item.jun;
                                    int g = item.jul;
                                    int h = item.ago;
                                    int i = item.sep;
                                    int j = item.oct;
                                    int k = item.nov;
                                    int l = item.dec;
                                    float m = item.res_esp;
                                    int sum = a + b + c + d + e + f + g + h + i + j + k + l;
                                    float pretotal = sum * m;
                                    float total = pretotal / m;

                                    <td class="center hide-on-small-only" style="">@Html.DisplayFor(modelItem => total) %</td>
                                }
                                else
                                {
                                    <td class="center hide-on-small-only" style="">0 %</td>
                                }
                            }
                            //FIN ANUAL
                        }
                        @*FIN PORCENTAJES MENSUAL Y ANUAL*@
                        @*FIN DE DELIVERACION POR PERIODOS*@

                        @if (Auth.Usuario.perfil_ID == 6 || Auth.Usuario.perfil_ID == 1)
                        {
                            <td class="center hide-on-small-only" style="">
                                <a href="@Url.Action("GenerarReporte", "IndicadoresView", new {idIndicador=item.indicadores_ID})" class="GenerarReporte" data-position="bottom" data-delay="50" title="Grafica" style="cursor:pointer;"><i class="mdi mdi-chart-bar mdi-24px black-text"></i></a>
                            </td>
                        }

                        @if (item.dec != 100)
                        {
                            <td class="center">
                                <a type="button" class="editarIndicador" id-item="@item.indicadores_ID" data-position="bottom" data-delay="50" title="Editar" data-tooltip="Editar" style="cursor:pointer;"><i class="mdi mdi-content-save mdi-24px black-text"></i></a>
                            </td>
                        }
                        else
                        {

                        }


                    </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="row">
            <div class="col s12 center-align">
                @if (Model != null)
                {
                    @Html.PagedListPager(Model, page => Url.Action("_TablaLineas", new { page })
                        , PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions()
                        {
                            Display = PagedListDisplayMode.IfNeeded,
                            DisplayPageCountAndCurrentLocation = true,
                            DisplayItemSliceAndTotal = false,
                            PageCountAndCurrentLocationFormat = "PÃ¡gina {0} de {1}.",
                            ItemSliceAndTotalFormat = "Mostrando los elementos {0} a {1} de {2}.",
                            LinkToIndividualPageFormat = "{0}",
                        }, new AjaxOptions()
                        {
                            HttpMethod = "POST",
                            UpdateTargetId = "TablaIndicadores",
                            OnComplete = "FltOnCompletePer",
                            OnBegin = "FltOnBeginPer"
                        }
                    )
                )
                }
            </div>
        </div>
    </div>
>>>>>>> ad71fbb916f671a3ef4c36985bbcb320cb741e1a
