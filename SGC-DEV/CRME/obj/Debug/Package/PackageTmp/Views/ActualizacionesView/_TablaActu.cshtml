
@using PagedList.Mvc
@model PagedList.IPagedList<CRME.Models.actualizaciones>
@{
    CRME.Models.SIRE_Context db = new CRME.Models.SIRE_Context();
}

@*<div class="row margin-10">
    <div class="col l6 m6 s11 titlecircle">
        <b>Lista de procesos</b>
    </div>
    <div class="col l6 m6 s1 separator">
    </div>
</div>*@
<div id="tblPersonas">
    <div class="row">
            
        @*como se pasara la parte de empresa por menu*@
        @*@if(Auth.Usuario.perfil_ID == 6 || Auth.Usuario.perfil_ID == 2)
        {*@
        <input type="hidden" value="@ViewBag.ide" />
        @{
            var idempre = ViewBag.ide;
        }
        @if (Auth.Usuario.perfil_ID == 6)
        {
         <div class="col s12 m6 l6 input-field">
          <a class="btn light-blue darken-4 waves-effect nuevores white-text" href="@Url.Action("CrearActu", "ActualizacionesView")"><i class="mdi mdi-plus"></i> Alta de actualizacion</a>            
         </div>
            }
       @*}*@             
    </div>
    <div class="row">
        <div class="col l12 m12 s12">
            <table class="striped highlight light-blue">
                <thead class="table-header-blue">
                    <tr class="table-header-tr-blue">
                        <td class="center hide-on-small-only">Descripcion</td>                        
                    </tr>
                </thead>
                <tbody class="table-body-blue">
                    @if (Model.Count == 0)
                    {
                        <tr class="table-body">
                            <td colspan="10" class="center">
                                <b>No se encontraron coincidencias</b>
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var item in Model)
                        {
                <tr class="table-body">                    
                    <td class="center-align" style="text-transform: uppercase;">@Html.DisplayFor(modelItem => item.descripcion)</td>                   
                </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col s12 center-align">
            @if (Model != null)
            {
                @Html.PagedListPager(Model, page => Url.Action("_TablaAudit", new { page })
                    , PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions()
                    {
                        Display = PagedListDisplayMode.IfNeeded,
                        DisplayPageCountAndCurrentLocation = true,
                        DisplayItemSliceAndTotal = false,
                        PageCountAndCurrentLocationFormat = "Página {0} de {1}.",
                        ItemSliceAndTotalFormat = "Mostrando los elementos {0} a {1} de {2}.",
                        LinkToIndividualPageFormat = "{0}",
                    }, new AjaxOptions()
                    {
                        HttpMethod = "POST",
                        UpdateTargetId = "tblPersonas",
                        OnComplete = "FltOnCompletePer",
                        OnBegin = "FltOnBeginPer"
                    }
                )
            )
            }
        </div>
    </div>
</div>



